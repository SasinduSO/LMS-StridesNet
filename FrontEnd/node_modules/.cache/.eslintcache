[{"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Router.js":"2","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\App.js":"3","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Login.js":"4","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Home.js":"5","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Header.js":"6","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\MyCourses.js":"7","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\AllCourses.js":"8","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Guest.js":"9","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Instructor.js":"10","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Student.js":"11","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Admin.js":"12","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\StudentCourse.js":"13","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Courses.js":"14","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Show.js":"15","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminAdd.js":"16","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminUpdate.js":"17","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Main.js":"18","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\SideBar.js":"19","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Assign.js":"20","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddUser.js":"21","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Footer.js":"22","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\helper\\Storage.js":"23","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\MyCourseItem.js":"24","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\CourseItem.js":"25","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\DynamicTable.js":"26","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateCourse.js":"27","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateUser.js":"28","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddCourse.js":"29","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\CoursesCard.js":"30","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\InstructorAdd.js":"31","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\AddCourseINS.js":"32","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\AddUserINS.js":"33"},{"size":423,"mtime":1716966820474,"results":"34","hashOfConfig":"35"},{"size":7386,"mtime":1718119551703,"results":"36","hashOfConfig":"35"},{"size":235,"mtime":1716803987620,"results":"37","hashOfConfig":"35"},{"size":3563,"mtime":1718113555491,"results":"38","hashOfConfig":"35"},{"size":7887,"mtime":1718129618986,"results":"39","hashOfConfig":"35"},{"size":3420,"mtime":1717369048390,"results":"40","hashOfConfig":"35"},{"size":2711,"mtime":1718101564954,"results":"41","hashOfConfig":"35"},{"size":2589,"mtime":1718101525702,"results":"42","hashOfConfig":"35"},{"size":304,"mtime":1716803987801,"results":"43","hashOfConfig":"35"},{"size":333,"mtime":1717361033869,"results":"44","hashOfConfig":"35"},{"size":320,"mtime":1716803987802,"results":"45","hashOfConfig":"35"},{"size":314,"mtime":1716803987800,"results":"46","hashOfConfig":"35"},{"size":3896,"mtime":1716803987637,"results":"47","hashOfConfig":"35"},{"size":2374,"mtime":1718116474623,"results":"48","hashOfConfig":"35"},{"size":4756,"mtime":1718103317124,"results":"49","hashOfConfig":"35"},{"size":405,"mtime":1717367349893,"results":"50","hashOfConfig":"35"},{"size":385,"mtime":1716803987620,"results":"51","hashOfConfig":"35"},{"size":3049,"mtime":1718120127656,"results":"52","hashOfConfig":"35"},{"size":1418,"mtime":1716963147362,"results":"53","hashOfConfig":"35"},{"size":3653,"mtime":1717265296232,"results":"54","hashOfConfig":"35"},{"size":6635,"mtime":1718112106584,"results":"55","hashOfConfig":"35"},{"size":1680,"mtime":1716803987802,"results":"56","hashOfConfig":"35"},{"size":1489,"mtime":1718120727157,"results":"57","hashOfConfig":"35"},{"size":1392,"mtime":1716803987797,"results":"58","hashOfConfig":"35"},{"size":2342,"mtime":1718062765588,"results":"59","hashOfConfig":"35"},{"size":1128,"mtime":1716803987802,"results":"60","hashOfConfig":"35"},{"size":6788,"mtime":1718101632022,"results":"61","hashOfConfig":"35"},{"size":8188,"mtime":1716803987620,"results":"62","hashOfConfig":"35"},{"size":4576,"mtime":1718101053480,"results":"63","hashOfConfig":"35"},{"size":602,"mtime":1718117170916,"results":"64","hashOfConfig":"35"},{"size":450,"mtime":1718121091951,"results":"65","hashOfConfig":"35"},{"size":5469,"mtime":1718122721611,"results":"66","hashOfConfig":"35"},{"size":6635,"mtime":1718112106584,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"76xuf0",{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"71"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\index.js",[],[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Router.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\App.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Login.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Home.js",["170","171","172"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Header.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\MyCourses.js",["173"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\AllCourses.js",["174"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Guest.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Instructor.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Student.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Admin.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\StudentCourse.js",["175"],[],"import \"../style/StudentCourses.css\";\r\nimport DynamicTable from \"../../shared/DynamicTable\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StudentCourse = () => {\r\n  let { code } = useParams();\r\n  const auth = getAuthUser();\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/view-enrolled-students\", {\r\n        headers: { token: auth.token, code: code },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({\r\n          ...courses,\r\n          loading: false,\r\n          err: \"Something Went Wrong\",\r\n        });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  const setGrade = (email, grade) => {\r\n    if (grade === \"\") {\r\n      grade = null;\r\n    }\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/set-grades\",\r\n        { student_email: email, course_code: code, grade: grade },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setCourses({ ...courses, reload: courses.reload + 1 });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 422) {\r\n          const errorMsg = error.response.data.errors[0].msg;\r\n          setCourses({ ...courses, loading: false, err: errorMsg });\r\n        } else {\r\n          setCourses({\r\n            ...courses,\r\n            loading: false,\r\n            err: \"Something Went Wrong\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  let TableData;\r\n  if (Array.isArray(courses.results)) {\r\n    courses.results.forEach((result) => {\r\n      result = Object.assign(result, {\r\n        Grade: (\r\n          <input\r\n            type=\"number\"\r\n            max=\"100\"\r\n            min=\"0\"\r\n            onChange={(e) => {\r\n              result.StudentGrade = e.target.value;\r\n            }}\r\n          />\r\n        ),\r\n        Update: (\r\n          <input\r\n            type=\"submit\"\r\n            className=\"student-submit\"\r\n            onClick={(e) => {\r\n              setGrade(result.StudentEmail, result.StudentGrade);\r\n            }}\r\n          />\r\n        ),\r\n      });\r\n    });\r\n\r\n    TableData = courses.results.map((obj) => {\r\n      const { CourseName, ...rest } = obj;\r\n      return rest;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {courses.loading === false &&\r\n        courses.err === null &&\r\n        Array.isArray(courses.results) &&\r\n        DynamicTable(TableData, courses.results[0].CourseName)}\r\n\r\n      {courses.loading === false &&\r\n        courses.err == null &&\r\n        !Array.isArray(courses.results) &&\r\n        courses.results && (\r\n          <Alert\r\n            variant=\"info\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {courses.results}\r\n          </Alert>\r\n        )}\r\n\r\n      {courses.loading === false && courses.err != null && (\r\n        <>\r\n          {\" \"}\r\n          <Alert\r\n            key=\"danger\"\r\n            variant=\"danger\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              zIndex: \"-1\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {courses.err}\r\n          </Alert>\r\n          <br />\r\n          <button className=\"showbtn\" onClick={(e) => window.location.reload()}>\r\n            Back\r\n          </button>\r\n          <br />\r\n          <br />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentCourse;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Courses.js",["176"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Show.js",["177"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminAdd.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminUpdate.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Main.js",["178"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\SideBar.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Assign.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddUser.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Footer.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\helper\\Storage.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\MyCourseItem.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\CourseItem.js",["179"],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\DynamicTable.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateCourse.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateUser.js",["180","181","182"],[],"import \"../style/Form.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateUser = (type) => {\r\n  const auth = getAuthUser();\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    loading: false,\r\n    success: \"\",\r\n    error: \"\",\r\n    status: \"1\",\r\n  });\r\n\r\n  const Update = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, loading: true, error: \"\", success: \"\" });\r\n    const link = `http://localhost:4000/update-${type}`;\r\n    axios\r\n      .put(\r\n        link,\r\n        {\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n          phone: user.phone,\r\n          status: user.status,\r\n          oldEmail: id,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setUser({\r\n          ...user,\r\n          loading: false,\r\n          error: \"\",\r\n          success: res.data,\r\n        });\r\n        setTimeout(async () => {\r\n          navigate(`/Admin/${type}`);\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 409 || err.response.status === 400) {\r\n          setUser({\r\n            ...user,\r\n            loading: false,\r\n            error: err.response.data,\r\n            success: \"\",\r\n          });\r\n        } else if (err.response.status === 422) {\r\n          setUser({\r\n            ...user,\r\n            loading: false,\r\n            error: err.response.data.errors[0].msg,\r\n            success: \"\",\r\n          });\r\n        } else {\r\n          setUser({\r\n            ...user,\r\n            name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            error: \"Something Went Wrong\",\r\n            success: \"\",\r\n            loading: false,\r\n          });\r\n          setTimeout(async () => {\r\n            navigate(`/Admin/${type}`);\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const link = `http://localhost:4000/get-${type}/${id}`;\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUser({\r\n          ...user,\r\n          name: res.data[0].name,\r\n          email: res.data[0].email,\r\n          phone: res.data[0].phone,\r\n          status: res.data[0].status,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setUser({\r\n          ...user,\r\n          name: \"\",\r\n          password: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          success: \"\",\r\n          loading: false,\r\n          error: \"Something Went Wrong\",\r\n        });\r\n        setTimeout(async () => {\r\n          navigate(`/Admin/${type}`);\r\n        }, 2000);\r\n      });\r\n  }, [id]);\r\n\r\n  type = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"admin-container\">\r\n        <div id=\"shared-table-p\">Update {type}</div>\r\n        {user.loading === false && user.error && (\r\n          <Alert variant=\"danger\" className=\"p-2\">\r\n            {user.error}\r\n          </Alert>\r\n        )}\r\n        {user.loading === false && user.success && (\r\n          <Alert variant=\"success\" className=\"p-2\">\r\n            {user.success}\r\n          </Alert>\r\n        )}\r\n        <form\r\n          name=\"myForm\"\r\n          action=\"/action_page.php\"\r\n          className=\"admin-form\"\r\n          onSubmit={Update}\r\n        >\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"name\" className=\"admin-label\">\r\n                Name\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`${type} Name`}\r\n                id=\"name\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.name}\r\n                onChange={(e) => setUser({ ...user, name: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"email\" className=\"admin-label\">\r\n                Email\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder={`${type} Email`}\r\n                id=\"email\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.email}\r\n                onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"password\" className=\"admin-label\">\r\n                Password\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder={`${type} Password`}\r\n                id=\"password\"\r\n                className=\"admin-input-select\"\r\n                value={user.password}\r\n                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"phone\" className=\"admin-label\">\r\n                Phone\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"tel\"\r\n                placeholder={`${type} Phone`}\r\n                id=\"phone\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.phone}\r\n                onChange={(e) => setUser({ ...user, phone: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label htmlFor=\"status\" className=\"admin-label\">\r\n                Status\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              {user.status == \"1\" && (\r\n                <>\r\n                  <select\r\n                    id=\"status\"\r\n                    name=\"status\"\r\n                    className=\"admin-input-select\"\r\n                    defaultValue=\"1\"\r\n                    onClick={(e) =>\r\n                      setUser({\r\n                        ...user,\r\n                        status: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"0\">In-Active</option>\r\n                  </select>\r\n                </>\r\n              )}\r\n              {user.status == \"0\" && (\r\n                <>\r\n                  <>\r\n                    <select\r\n                      id=\"status\"\r\n                      name=\"status\"\r\n                      className=\"admin-input-select\"\r\n                      defaultValue=\"0\"\r\n                      onClick={(e) =>\r\n                        setUser({\r\n                          ...user,\r\n                          status: e.target.value,\r\n                        })\r\n                      }\r\n                    >\r\n                      <option value=\"1\">Active</option>\r\n                      <option value=\"0\">In-Active</option>\r\n                    </select>\r\n                  </>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-row\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"admin-submit\"\r\n              disabled={user.loading === true}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddCourse.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\CoursesCard.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\InstructorAdd.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\AddCourseINS.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\AddUserINS.js",[],[],{"ruleId":"183","severity":1,"message":"184","line":33,"column":6,"nodeType":"185","endLine":33,"endColumn":22,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":125,"column":46,"nodeType":"189","messageId":"190","endLine":125,"endColumn":48},{"ruleId":"187","severity":1,"message":"188","line":182,"column":46,"nodeType":"189","messageId":"190","endLine":182,"endColumn":48},{"ruleId":"183","severity":1,"message":"191","line":31,"column":6,"nodeType":"185","endLine":31,"endColumn":22,"suggestions":"192"},{"ruleId":"183","severity":1,"message":"191","line":31,"column":6,"nodeType":"185","endLine":31,"endColumn":22,"suggestions":"193"},{"ruleId":"183","severity":1,"message":"194","line":35,"column":6,"nodeType":"185","endLine":35,"endColumn":22,"suggestions":"195"},{"ruleId":"183","severity":1,"message":"191","line":30,"column":6,"nodeType":"185","endLine":30,"endColumn":22,"suggestions":"196"},{"ruleId":"183","severity":1,"message":"197","line":52,"column":6,"nodeType":"185","endLine":52,"endColumn":36,"suggestions":"198"},{"ruleId":"183","severity":1,"message":"191","line":35,"column":6,"nodeType":"185","endLine":35,"endColumn":22,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":5,"column":10,"nodeType":"202","messageId":"203","endLine":5,"endColumn":14},{"ruleId":"183","severity":1,"message":"204","line":121,"column":6,"nodeType":"185","endLine":121,"endColumn":10,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":226,"column":28,"nodeType":"208","messageId":"209","endLine":226,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":245,"column":28,"nodeType":"208","messageId":"209","endLine":245,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.","ArrayExpression",["210"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'auth.email', 'auth.token', and 'courses'. Either include them or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.",["211"],["212"],"React Hook useEffect has missing dependencies: 'auth.token', 'code', and 'courses'. Either include them or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.",["213"],["214"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["215"],["216"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'auth.token', 'navigate', 'type', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["217"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"223","fix":"224"},{"desc":"220","fix":"225"},{"desc":"226","fix":"227"},{"desc":"220","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [courses, courses.reload]",{"range":"231","text":"232"},"Update the dependencies array to be: [auth.email, auth.token, courses, courses.reload]",{"range":"233","text":"234"},{"range":"235","text":"234"},"Update the dependencies array to be: [auth.token, code, courses, courses.reload]",{"range":"236","text":"237"},{"range":"238","text":"234"},"Update the dependencies array to be: [type, auth.token, data.reload, data]",{"range":"239","text":"240"},{"range":"241","text":"234"},"Update the dependencies array to be: [auth.token, id, navigate, type, user]",{"range":"242","text":"243"},[1134,1150],"[courses, courses.reload]",[936,952],"[auth.email, auth.token, courses, courses.reload]",[915,931],[1041,1057],"[auth.token, code, courses, courses.reload]",[1001,1017],[1290,1320],"[type, auth.token, data.reload, data]",[1040,1056],[3043,3047],"[auth.token, id, navigate, type, user]"]