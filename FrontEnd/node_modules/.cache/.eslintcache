[{"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\index.js":"1","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Router.js":"2","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\App.js":"3","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Login.js":"4","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Home.js":"5","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Header.js":"6","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\MyCourses.js":"7","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\AllCourses.js":"8","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Guest.js":"9","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Instructor.js":"10","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Student.js":"11","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Admin.js":"12","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\StudentCourse.js":"13","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Courses.js":"14","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Show.js":"15","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminAdd.js":"16","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminUpdate.js":"17","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Main.js":"18","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\SideBar.js":"19","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Assign.js":"20","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddUser.js":"21","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Footer.js":"22","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\helper\\Storage.js":"23","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\MyCourseItem.js":"24","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\CourseItem.js":"25","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\DynamicTable.js":"26","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateCourse.js":"27","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateUser.js":"28","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddCourse.js":"29","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\CoursesCard.js":"30"},{"size":423,"mtime":1716966820474,"results":"31","hashOfConfig":"32"},{"size":7107,"mtime":1717360739591,"results":"33","hashOfConfig":"32"},{"size":235,"mtime":1716803987620,"results":"34","hashOfConfig":"32"},{"size":3562,"mtime":1717286378610,"results":"35","hashOfConfig":"32"},{"size":8305,"mtime":1716966973070,"results":"36","hashOfConfig":"32"},{"size":3420,"mtime":1717369048390,"results":"37","hashOfConfig":"32"},{"size":2714,"mtime":1716803987798,"results":"38","hashOfConfig":"32"},{"size":2592,"mtime":1716803987798,"results":"39","hashOfConfig":"32"},{"size":304,"mtime":1716803987801,"results":"40","hashOfConfig":"32"},{"size":333,"mtime":1717361033869,"results":"41","hashOfConfig":"32"},{"size":320,"mtime":1716803987802,"results":"42","hashOfConfig":"32"},{"size":314,"mtime":1716803987800,"results":"43","hashOfConfig":"32"},{"size":3896,"mtime":1716803987637,"results":"44","hashOfConfig":"32"},{"size":2336,"mtime":1716803987637,"results":"45","hashOfConfig":"32"},{"size":4740,"mtime":1717365729204,"results":"46","hashOfConfig":"32"},{"size":405,"mtime":1717367349893,"results":"47","hashOfConfig":"32"},{"size":385,"mtime":1716803987620,"results":"48","hashOfConfig":"32"},{"size":2795,"mtime":1717362494214,"results":"49","hashOfConfig":"32"},{"size":1418,"mtime":1716963147362,"results":"50","hashOfConfig":"32"},{"size":3653,"mtime":1717265296232,"results":"51","hashOfConfig":"32"},{"size":6590,"mtime":1717367667387,"results":"52","hashOfConfig":"32"},{"size":1680,"mtime":1716803987802,"results":"53","hashOfConfig":"32"},{"size":1465,"mtime":1717286355577,"results":"54","hashOfConfig":"32"},{"size":1392,"mtime":1716803987797,"results":"55","hashOfConfig":"32"},{"size":2247,"mtime":1716803987797,"results":"56","hashOfConfig":"32"},{"size":1128,"mtime":1716803987802,"results":"57","hashOfConfig":"32"},{"size":5939,"mtime":1717584400253,"results":"58","hashOfConfig":"32"},{"size":8188,"mtime":1716803987620,"results":"59","hashOfConfig":"32"},{"size":3768,"mtime":1716955904894,"results":"60","hashOfConfig":"32"},{"size":522,"mtime":1716803987637,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"76xuf0",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"65"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"65"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\index.js",[],[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Router.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\App.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Login.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Home.js",["162","163","164"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport img3 from \"../Student/assets/imgs/instructor.jpeg\";\r\nimport img4 from \"../Student/assets/imgs/2.jpg\";\r\nimport img6 from \"../Student/assets/imgs/Freerange.jpg\";\r\nimport img7 from \"../Student/assets/imgs/Freerange-Stock-Svetlana-Sokolova-164.jpg\";\r\nimport img8 from \"../Student/assets/imgs/4.jpg\";\r\nimport \"../styleShared/home.css\";\r\nimport CourseItem from \"../Student/components/CourseItem\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/home\")\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({ ...courses, loading: false, err: \"No Courses Exist\" });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  function selectImage(small) {\r\n    if (small && small.src) {\r\n      let full = document.getElementById(\"imagebox\");\r\n      full.src = small.src;\r\n    } else {\r\n      console.log(\"Image not defined or has no src property.\");\r\n    }\r\n  }\r\n  let instructors = [],\r\n    x = 0,\r\n    y = 0;\r\n  return (\r\n    <>\r\n      <section className=\"st-main-page\">\r\n        <div className=\"st-Section_top\">\r\n          <div className=\"st-content\">\r\n            <h1>\r\n              Read & Learn <br /> in an easy way\r\n            </h1>\r\n            <a href={\"#courses\"}>Discover our courses</a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"enroll\"\r\n        tabIndex=\"-1\"\r\n        aria-labelledby=\"enrollLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog modal-dialog-centered\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h1 className=\"modal-title fs-5\" id=\"enrollLabel\">\r\n                Confirmation\r\n              </h1>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"message-text\" className=\"col-form-label\">\r\n                    Are you sure?{\" \"}\r\n                  </label>\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-bs-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                data-bs-dismiss=\"modal\"\r\n                onClick={() => navigate(\"/login\")}\r\n              >\r\n                Confirm\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"st-review\" id=\"Instructors\">\r\n        <h1>Instructors</h1>\r\n        <div className=\"st-review_box\">\r\n          {courses.loading === false && courses.results.length === 0 && (\r\n            <Alert\r\n              variant=\"danger\"\r\n              style={{\r\n                width: \"50%\",\r\n                margin: \"5% auto\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              No Instructors\r\n            </Alert>\r\n          )}\r\n          {courses.loading === false &&\r\n            courses.results.map((instructor) => {\r\n              if (\r\n                !instructors.includes(\r\n                  JSON.stringify(instructor.InstructorName)\r\n                ) &&\r\n                x !== 3\r\n              ) {\r\n                instructors.push(JSON.stringify(instructor.InstructorName));\r\n                x++;\r\n                return (\r\n                  <div key={x} className=\"st-review_card\">\r\n                    <div className=\"st-card_top\">\r\n                      <div className=\"st-profile\">\r\n                        <div className=\"st-profile_image\">\r\n                          <img src={img3} alt=\"\" />\r\n                        </div>\r\n\r\n                        <div className=\"st-name\">\r\n                          <strong>{instructor.InstructorName}</strong>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"st-comment\">\r\n                      <p>\r\n                        Instructors are responsible imparting knowledge to\r\n                        students. They are well-versed in different topics\r\n                        related to their area of teaching. They prepare lessons,\r\n                        create presentation materials and other collaterals, and\r\n                        present these to the students. They manage the classroom\r\n                        and ensure that students are attentive.\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"home-courses\" id=\"courses\">\r\n        <div className=\"st-products\" id=\"Products\">\r\n          <h1>COURSES</h1>\r\n          <section className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              {courses.loading === false && courses.results.length === 0 && (\r\n                <Alert\r\n                  variant=\"danger\"\r\n                  style={{\r\n                    width: \"50%\",\r\n                    margin: \"5% auto\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  No Courses\r\n                </Alert>\r\n              )}\r\n              {courses.loading === false &&\r\n                courses.results.map((course) => {\r\n                  if (y++ <= 3) {\r\n                    return (\r\n                      <CourseItem\r\n                        key={y}\r\n                        code={course.code}\r\n                        name={course.CourseName}\r\n                        instructorName={course.InstructorName}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n            </div>\r\n            {y >= 4 && (\r\n              <>\r\n                <br />\r\n                <Link className=\"showbtn\" to={\"/login\"}>\r\n                  Show More\r\n                </Link>\r\n              </>\r\n            )}\r\n          </section>\r\n        </div>\r\n      </section>\r\n      <div className=\"st-about\" id=\"About\">\r\n        <h1>Notices</h1>\r\n        <div className=\"st-about_main\">\r\n          <div className=\"st-about_image\">\r\n            <div className=\"st-about_small_image\">\r\n              <img src={img7} onClick={(e) => selectImage(e.target)} alt=\"\" />\r\n              <img src={img6} onClick={(e) => selectImage(e.target)} alt=\"\" />\r\n              <img src={img8} onClick={(e) => selectImage(e.target)} alt=\"\" />\r\n              <img src={img4} onClick={(e) => selectImage(e.target)} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"st-image_contaner\">\r\n              <img src={img6} id=\"imagebox\" width={\"650px\"} alt=\"\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"st-about_text\">\r\n            <p>\r\n              the term lecturer may be used inmally to refer to anyone who\r\n              conducts lectures at a university or elsewhere, but mally refers\r\n              to a specific academic rank. The academic ranks in Australia are\r\n              similar to those in the UK, with the rank of associate professor\r\n              roughly equivalent to reader in UK universities. The academic\r\n              levels in Australia are (in ascending academic level): (A)\r\n              associate lecturer, (B) lecturer, (C) senior lecturer, (D)\r\n              associate professor, and (E) professor.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Header.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\MyCourses.js",["165"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport MyCourseItem from \"../components/MyCourseItem\";\r\nimport \"../assets/style/myCourses.css\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction MyCourses() {\r\n  const auth = getAuthUser();\r\n\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    courseGrade: \"\",\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/get-my-courses\", {\r\n        headers: { token: auth.token, email: auth.email },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({ ...courses, loading: false, err: \"Something Went Wrong\" });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  return (\r\n    <>\r\n      {courses.loading === false && courses.err === null && (\r\n        <section className=\"st-courses\" id=\"courses\">\r\n          <div className=\"st-products\" id=\"Products\">\r\n            <section className=\"container-fluid \">\r\n              <h1 className=\"text-center pt-5\">My Courses</h1>\r\n              <div className=\"row py-5\">\r\n                {Array.isArray(courses.results) &&\r\n                  courses.results.map((course) => {\r\n                    return (\r\n                      <MyCourseItem\r\n                        key={course.code}\r\n                        code={course.code}\r\n                        name={course.CourseName}\r\n                        instructorName={course.InstructorName}\r\n                        grade={course.grade}\r\n                      />\r\n                    );\r\n                  })}\r\n                {!Array.isArray(courses.results) && courses.results && (\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      margin: \"5% auto\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {courses.results}\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </section>\r\n      )}\r\n      {courses.loading === false && courses.err != null && (\r\n        <Alert\r\n          key=\"danger\"\r\n          variant=\"danger\"\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"5% auto\",\r\n            zIndex: \"-1\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {courses.err}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyCourses;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\pages\\AllCourses.js",["166"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport CourseItem from \"../components/CourseItem\";\r\nimport \"../assets/style/allCourses.css\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nfunction AllCourses() {\r\n  const auth = getAuthUser();\r\n\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/get-all-courses\", {\r\n        headers: { token: auth.token, email: auth.email },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({ ...courses, loading: false, err: \"Something Went Wrong\" });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {courses.loading === false && courses.err === null && (\r\n        <section className=\"st-courses\" id=\"courses\">\r\n          <div className=\"st-products\" id=\"Products\">\r\n            <h1>COURSES</h1>\r\n            <section className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                {Array.isArray(courses.results) &&\r\n                  courses.results.map((course) => {\r\n                    return (\r\n                      <CourseItem\r\n                        key={course.code}\r\n                        code={course.code}\r\n                        name={course.CourseName}\r\n                        instructorName={course.InstructorName}\r\n                      />\r\n                    );\r\n                  })}\r\n                {!Array.isArray(courses.results) && courses.results && (\r\n                  <Alert\r\n                    variant=\"info\"\r\n                    style={{\r\n                      width: \"50%\",\r\n                      margin: \"5% auto\",\r\n                      textAlign: \"center\",\r\n                    }}\r\n                  >\r\n                    {courses.results}\r\n                  </Alert>\r\n                )}\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </section>\r\n      )}\r\n      {courses.loading === false && courses.err != null && (\r\n        <Alert\r\n          key=\"danger\"\r\n          variant=\"danger\"\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"5% auto\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {courses.err}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllCourses;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Guest.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Instructor.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Student.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\middleware\\Admin.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\StudentCourse.js",["167"],[],"import \"../style/StudentCourses.css\";\r\nimport DynamicTable from \"../../shared/DynamicTable\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst StudentCourse = () => {\r\n  let { code } = useParams();\r\n  const auth = getAuthUser();\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/view-enrolled-students\", {\r\n        headers: { token: auth.token, code: code },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({\r\n          ...courses,\r\n          loading: false,\r\n          err: \"Something Went Wrong\",\r\n        });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  const setGrade = (email, grade) => {\r\n    if (grade === \"\") {\r\n      grade = null;\r\n    }\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/set-grades\",\r\n        { student_email: email, course_code: code, grade: grade },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setCourses({ ...courses, reload: courses.reload + 1 });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 422) {\r\n          const errorMsg = error.response.data.errors[0].msg;\r\n          setCourses({ ...courses, loading: false, err: errorMsg });\r\n        } else {\r\n          setCourses({\r\n            ...courses,\r\n            loading: false,\r\n            err: \"Something Went Wrong\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  let TableData;\r\n  if (Array.isArray(courses.results)) {\r\n    courses.results.forEach((result) => {\r\n      result = Object.assign(result, {\r\n        Grade: (\r\n          <input\r\n            type=\"number\"\r\n            max=\"100\"\r\n            min=\"0\"\r\n            onChange={(e) => {\r\n              result.StudentGrade = e.target.value;\r\n            }}\r\n          />\r\n        ),\r\n        Update: (\r\n          <input\r\n            type=\"submit\"\r\n            className=\"student-submit\"\r\n            onClick={(e) => {\r\n              setGrade(result.StudentEmail, result.StudentGrade);\r\n            }}\r\n          />\r\n        ),\r\n      });\r\n    });\r\n\r\n    TableData = courses.results.map((obj) => {\r\n      const { CourseName, ...rest } = obj;\r\n      return rest;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {courses.loading === false &&\r\n        courses.err === null &&\r\n        Array.isArray(courses.results) &&\r\n        DynamicTable(TableData, courses.results[0].CourseName)}\r\n\r\n      {courses.loading === false &&\r\n        courses.err == null &&\r\n        !Array.isArray(courses.results) &&\r\n        courses.results && (\r\n          <Alert\r\n            variant=\"info\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {courses.results}\r\n          </Alert>\r\n        )}\r\n\r\n      {courses.loading === false && courses.err != null && (\r\n        <>\r\n          {\" \"}\r\n          <Alert\r\n            key=\"danger\"\r\n            variant=\"danger\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              zIndex: \"-1\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {courses.err}\r\n          </Alert>\r\n          <br />\r\n          <button className=\"showbtn\" onClick={(e) => window.location.reload()}>\r\n            Back\r\n          </button>\r\n          <br />\r\n          <br />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentCourse;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Courses.js",["168"],[],"import { Link } from \"react-router-dom\";\r\nimport \"../../styleShared/Table.css\";\r\nimport DynamicTable from \"../../shared/DynamicTable\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst Courses = () => {\r\n  const auth = getAuthUser();\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/view-courses-with-students\", {\r\n        headers: { token: auth.token, email: auth.email },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({ ...courses, loading: false, err: \"Something Went Wrong\" });\r\n      });\r\n  }, [courses.reload]);\r\n\r\n  if (Array.isArray(courses.results)) {\r\n    courses.results.forEach((result) => {\r\n      result = Object.assign(result, {\r\n        AboutCourse: (\r\n          <Link\r\n            to={`/Instructor/StudentCourse/${result.CourseCode}`}\r\n            className=\"Ins-Link\"\r\n          >\r\n            More details\r\n          </Link>\r\n        ),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {courses.loading === false &&\r\n        courses.err === null &&\r\n        Array.isArray(courses.results) &&\r\n        DynamicTable(courses.results, \"Courses\")}\r\n\r\n      {courses.loading === false &&\r\n        courses.err == null &&\r\n        !Array.isArray(courses.results) &&\r\n        courses.results && (\r\n          <Alert\r\n            variant=\"info\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {courses.results}\r\n          </Alert>\r\n        )}\r\n\r\n      {courses.loading === false && courses.err != null && (\r\n        <Alert\r\n          key=\"danger\"\r\n          variant=\"danger\"\r\n          style={{\r\n            width: \"50%\",\r\n            margin: \"5% auto\",\r\n            zIndex: \"-1\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          {courses.err}\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Show.js",["169"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DynamicTable from \"../../shared/DynamicTable\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\n\r\nconst Show = () => {\r\n  const auth = getAuthUser();\r\n  console.log(auth);\r\n  let { type } = useParams();\r\n  if (type === undefined) {\r\n    type = \"instructor\";\r\n  }\r\n\r\n  type = type.toLowerCase();\r\n\r\n  const [data, setData] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setData({ ...data, loading: true });\r\n    const link = `http://localhost:4000/view-${type}s`;\r\n\r\n    console.log('Auth Token:', auth.token);\r\n    console.log('Request URL:', link);\r\n    \r\n\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setData({\r\n          ...data,\r\n          results: res.data,\r\n          loading: false,\r\n          err: null,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setData({ ...data, loading: false, err: \"Somethinggg went wrong\" });\r\n      });\r\n  }, [type,auth.token, data.reload]);\r\n\r\n  const deleteData = (item) => {\r\n    const link = `http://localhost:4000/delete-${type}`;\r\n    setData({ ...data, loading: true });\r\n\r\n    if (type === \"course\") {\r\n      axios\r\n        .delete(link, {\r\n          data: { code: item },\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setData({ ...data, loading: false, reload: data.reload + 1 });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          if (error.response.status === 404) {\r\n            setData({ ...data, loading: false, err: \"Something Wentt Wrong\" });\r\n          } else {\r\n            setData({ ...data, loading: false, err: error.response.data });\r\n          }\r\n        });\r\n    } else {\r\n      axios\r\n        .delete(link, {\r\n          data: { email: item },\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          setData({ ...data, loading: false, reload: data.reload + 1 });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          if (error.response.status === 404) {\r\n            setData({ ...data, loading: false, err: \"Something Went Wrong\" });\r\n          } else {\r\n            setData({ ...data, loading: false, err: error.response.data });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(data.results)) {\r\n    data.results.forEach((result) => {\r\n      if (type === \"course\" && result[\"Instructor Email\"] === null)\r\n        result[\"Instructor Email\"] = \"none\";\r\n\r\n      result.Status =\r\n        typeof result.Status === \"number\"\r\n          ? result.Status === 1\r\n            ? \"Active\"\r\n            : \"In-Active\"\r\n          : result.Status;\r\n      result = Object.assign(result, {\r\n        Update: (\r\n          <Link to={`/Admin/Update/${type}/${result.Code || result.Email}`}>\r\n            <i className=\"fa-solid fa-pen-to-square\"></i>\r\n          </Link>\r\n        ),\r\n        Delete: (\r\n          <Link>\r\n            <i\r\n              className=\"fa-solid fa-trash\"\r\n              onClick={(e) => {\r\n                deleteData(result.Code || result.Email);\r\n              }}\r\n            ></i>\r\n          </Link>\r\n        ),\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {data.loading === false &&\r\n        data.err === null &&\r\n        Array.isArray(data.results) &&\r\n        data.results.length > 0 &&\r\n        DynamicTable(data.results, type)}\r\n\r\n      {data.loading === false &&\r\n        data.err === null &&\r\n        !Array.isArray(data.results) &&\r\n        data.results && (\r\n          <Alert\r\n            variant=\"info\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              textAlign: \"center\",\r\n              zIndex: \"-1\",\r\n            }}\r\n          >\r\n            {data.results}\r\n          </Alert>\r\n        )}\r\n\r\n      {data.loading === false && data.err != null && (\r\n        <>\r\n          <Alert\r\n            key=\"danger\"\r\n            variant=\"danger\"\r\n            style={{\r\n              width: \"50%\",\r\n              margin: \"5% auto\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            {data.err}\r\n          </Alert>\r\n\r\n          <br />\r\n          <button className=\"showbtn\" onClick={(e) => window.location.reload()}>\r\n            Back\r\n          </button>\r\n          <br />\r\n          <br />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Show;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminAdd.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\AdminUpdate.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\pages\\Main.js",["170"],[],"import \"../style/main.css\";\r\nimport \"../style/CourseCard.css\";\r\nimport CoursesCard from \"../components/CoursesCard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\n\r\nconst Main = () => {\r\n  const auth = getAuthUser();\r\n  const [courses, setCourses] = useState({\r\n    loading: true,\r\n    results: [],\r\n    err: null,\r\n    reload: 0,\r\n  });\r\n  useEffect(() => {\r\n    setCourses({ ...courses, loading: true });\r\n    axios\r\n      .get(\"http://localhost:4000/view-instructor-courses\", {\r\n        headers: {\r\n          token: auth.token,\r\n          email: auth.email,\r\n        },\r\n      })\r\n      .then((resp) => {\r\n        setCourses({ ...courses, results: resp.data, loading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setCourses({ ...courses, loading: false, err: \"Something Went Wrong\" });\r\n      });\r\n  }, [courses.reload]);\r\n  return (\r\n    <>\r\n      <div className=\"InstructorContainer\">\r\n        <div className=\"text\">\r\n          <i>\r\n            {\" \"}\r\n            in Strides-Net you can manage<br></br> your courses eaily\r\n          </i>\r\n        </div>\r\n        <Link to=\"/Instructor/Courses\" className=\"Ins-Link\">\r\n          {\" \"}\r\n          Courses{\" \"}\r\n        </Link>\r\n      </div>\r\n      <br></br>\r\n      <br></br>\r\n      <div>\r\n        <div className=\"Instructor-course-list\">\r\n          {courses.loading === false &&\r\n            courses.err == null &&\r\n            Array.isArray(courses.results) &&\r\n            courses.results.map((item) => {\r\n              return (\r\n                <CoursesCard\r\n                  key={item.code}\r\n                  name={item.name}\r\n                  code={item.code}\r\n                />\r\n              );\r\n            })}\r\n          {courses.loading === false &&\r\n            courses.err == null &&\r\n            !Array.isArray(courses.results) &&\r\n            courses.results && (\r\n              <Alert\r\n                variant=\"info\"\r\n                style={{\r\n                  width: \"50%\",\r\n                  margin: \"5% auto\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {courses.results}\r\n              </Alert>\r\n            )}\r\n          {courses.loading === false && courses.err != null && (\r\n            <Alert\r\n              key=\"danger\"\r\n              variant=\"danger\"\r\n              style={{\r\n                width: \"50%\",\r\n                margin: \"5% auto\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              {courses.err}\r\n            </Alert>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\SideBar.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\pages\\Assign.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddUser.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\Footer.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\helper\\Storage.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\MyCourseItem.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Student\\components\\CourseItem.js",["171"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport img10 from \"../assets/imgs/Business.jpg\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction CourseItem(props) {\r\n  const auth = getAuthUser();\r\n  const navigate = useNavigate();\r\n  // let code = props.code;\r\n  const enrollCourse = (courseCode) => {\r\n    axios\r\n      .post(\r\n        \"http://localhost:4000/enroll-course\",\r\n        { email: auth.email, code: courseCode },\r\n        { headers: { token: auth.token } }\r\n      )\r\n      .then((res) => {\r\n        navigate(`/Student/MyCourses`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"col-3 d-flex justify-content-evenly align-items-center pb-4\">\r\n        <div className=\"st-card\">\r\n          <div className=\"st-small_card\">\r\n            <i className=\"fa-solid fa-heart icon\"></i>\r\n            <i className=\"fa-solid fa-share icon\"></i>\r\n          </div>\r\n          <div className=\"st-image\">\r\n            <img src={img10} width=\"270px\" height=\"200px\" alt=\"\" />\r\n          </div>\r\n          <div className=\"st-products_text\">\r\n            <h3>{props.name}</h3>\r\n\r\n            <h6>\r\n              <p>Code</p>\r\n              {props.code}\r\n            </h6>\r\n\r\n            <h5>\r\n              <p>Instructor Name</p>\r\n              {props.instructorName}\r\n            </h5>\r\n            <div className=\"st-products_star\">\r\n              <i className=\"fa-solid fa-star\"></i>\r\n              <i className=\"fa-solid fa-star\"></i>\r\n              <i className=\"fa-solid fa-star\"></i>\r\n              <i className=\"fa-solid fa-star\"></i>\r\n              <i className=\"fa-solid fa-star\"></i>\r\n            </div>\r\n            {auth && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-success\"\r\n                // data-bs-toggle=\"modal\"\r\n                // data-bs-target=\"#enroll\"\r\n                onClick={() => {\r\n                  enrollCourse(props.code);\r\n                }}\r\n              >\r\n                Enroll\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CourseItem;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\shared\\DynamicTable.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateCourse.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\updateUser.js",["172","173","174"],[],"import \"../style/Form.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { getAuthUser } from \"../../helper/Storage\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateUser = (type) => {\r\n  const auth = getAuthUser();\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    loading: false,\r\n    success: \"\",\r\n    error: \"\",\r\n    status: \"1\",\r\n  });\r\n\r\n  const Update = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, loading: true, error: \"\", success: \"\" });\r\n    const link = `http://localhost:4000/update-${type}`;\r\n    axios\r\n      .put(\r\n        link,\r\n        {\r\n          name: user.name,\r\n          email: user.email,\r\n          password: user.password,\r\n          phone: user.phone,\r\n          status: user.status,\r\n          oldEmail: id,\r\n        },\r\n        {\r\n          headers: {\r\n            token: auth.token,\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setUser({\r\n          ...user,\r\n          loading: false,\r\n          error: \"\",\r\n          success: res.data,\r\n        });\r\n        setTimeout(async () => {\r\n          navigate(`/Admin/${type}`);\r\n        }, 1000);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 409 || err.response.status === 400) {\r\n          setUser({\r\n            ...user,\r\n            loading: false,\r\n            error: err.response.data,\r\n            success: \"\",\r\n          });\r\n        } else if (err.response.status === 422) {\r\n          setUser({\r\n            ...user,\r\n            loading: false,\r\n            error: err.response.data.errors[0].msg,\r\n            success: \"\",\r\n          });\r\n        } else {\r\n          setUser({\r\n            ...user,\r\n            name: \"\",\r\n            password: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            error: \"Something Went Wrong\",\r\n            success: \"\",\r\n            loading: false,\r\n          });\r\n          setTimeout(async () => {\r\n            navigate(`/Admin/${type}`);\r\n          }, 2000);\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    const link = `http://localhost:4000/get-${type}/${id}`;\r\n    axios\r\n      .get(link, {\r\n        headers: {\r\n          token: auth.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setUser({\r\n          ...user,\r\n          name: res.data[0].name,\r\n          email: res.data[0].email,\r\n          phone: res.data[0].phone,\r\n          status: res.data[0].status,\r\n          loading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        setUser({\r\n          ...user,\r\n          name: \"\",\r\n          password: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          success: \"\",\r\n          loading: false,\r\n          error: \"Something Went Wrong\",\r\n        });\r\n        setTimeout(async () => {\r\n          navigate(`/Admin/${type}`);\r\n        }, 2000);\r\n      });\r\n  }, [id]);\r\n\r\n  type = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"admin-container\">\r\n        <div id=\"shared-table-p\">Update {type}</div>\r\n        {user.loading === false && user.error && (\r\n          <Alert variant=\"danger\" className=\"p-2\">\r\n            {user.error}\r\n          </Alert>\r\n        )}\r\n        {user.loading === false && user.success && (\r\n          <Alert variant=\"success\" className=\"p-2\">\r\n            {user.success}\r\n          </Alert>\r\n        )}\r\n        <form\r\n          name=\"myForm\"\r\n          action=\"/action_page.php\"\r\n          className=\"admin-form\"\r\n          onSubmit={Update}\r\n        >\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"name\" className=\"admin-label\">\r\n                Name\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`${type} Name`}\r\n                id=\"name\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.name}\r\n                onChange={(e) => setUser({ ...user, name: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"email\" className=\"admin-label\">\r\n                Email\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"email\"\r\n                placeholder={`${type} Email`}\r\n                id=\"email\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.email}\r\n                onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"password\" className=\"admin-label\">\r\n                Password\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"password\"\r\n                placeholder={`${type} Password`}\r\n                id=\"password\"\r\n                className=\"admin-input-select\"\r\n                value={user.password}\r\n                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label key=\"phone\" className=\"admin-label\">\r\n                Phone\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              <input\r\n                type=\"tel\"\r\n                placeholder={`${type} Phone`}\r\n                id=\"phone\"\r\n                className=\"admin-input-select\"\r\n                required\r\n                value={user.phone}\r\n                onChange={(e) => setUser({ ...user, phone: e.target.value })}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"admin-row\">\r\n            <div className=\"admin-col-25\">\r\n              <label htmlFor=\"status\" className=\"admin-label\">\r\n                Status\r\n              </label>\r\n            </div>\r\n            <div className=\"admin-col-75\">\r\n              {user.status == \"1\" && (\r\n                <>\r\n                  <select\r\n                    id=\"status\"\r\n                    name=\"status\"\r\n                    className=\"admin-input-select\"\r\n                    defaultValue=\"1\"\r\n                    onClick={(e) =>\r\n                      setUser({\r\n                        ...user,\r\n                        status: e.target.value,\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"1\">Active</option>\r\n                    <option value=\"0\">In-Active</option>\r\n                  </select>\r\n                </>\r\n              )}\r\n              {user.status == \"0\" && (\r\n                <>\r\n                  <>\r\n                    <select\r\n                      id=\"status\"\r\n                      name=\"status\"\r\n                      className=\"admin-input-select\"\r\n                      defaultValue=\"0\"\r\n                      onClick={(e) =>\r\n                        setUser({\r\n                          ...user,\r\n                          status: e.target.value,\r\n                        })\r\n                      }\r\n                    >\r\n                      <option value=\"1\">Active</option>\r\n                      <option value=\"0\">In-Active</option>\r\n                    </select>\r\n                  </>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"admin-row\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              className=\"admin-submit\"\r\n              disabled={user.loading === true}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Admin\\components\\AddCourse.js",[],[],"C:\\Users\\Asus\\Desktop\\STRIDES-NET\\StridesNet\\FrontEnd\\src\\Instructor\\components\\CoursesCard.js",[],[],{"ruleId":"175","severity":1,"message":"176","line":33,"column":6,"nodeType":"177","endLine":33,"endColumn":22,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":125,"column":46,"nodeType":"181","messageId":"182","endLine":125,"endColumn":48},{"ruleId":"179","severity":1,"message":"180","line":182,"column":46,"nodeType":"181","messageId":"182","endLine":182,"endColumn":48},{"ruleId":"175","severity":1,"message":"183","line":31,"column":6,"nodeType":"177","endLine":31,"endColumn":22,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"183","line":31,"column":6,"nodeType":"177","endLine":31,"endColumn":22,"suggestions":"185"},{"ruleId":"175","severity":1,"message":"186","line":35,"column":6,"nodeType":"177","endLine":35,"endColumn":22,"suggestions":"187"},{"ruleId":"175","severity":1,"message":"183","line":30,"column":6,"nodeType":"177","endLine":30,"endColumn":22,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":52,"column":6,"nodeType":"177","endLine":52,"endColumn":36,"suggestions":"190"},{"ruleId":"175","severity":1,"message":"183","line":34,"column":6,"nodeType":"177","endLine":34,"endColumn":22,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":5,"column":10,"nodeType":"194","messageId":"195","endLine":5,"endColumn":14},{"ruleId":"175","severity":1,"message":"196","line":121,"column":6,"nodeType":"177","endLine":121,"endColumn":10,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":226,"column":28,"nodeType":"200","messageId":"201","endLine":226,"endColumn":30},{"ruleId":"198","severity":1,"message":"199","line":245,"column":28,"nodeType":"200","messageId":"201","endLine":245,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.","ArrayExpression",["202"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'auth.email', 'auth.token', and 'courses'. Either include them or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.",["203"],["204"],"React Hook useEffect has missing dependencies: 'auth.token', 'code', and 'courses'. Either include them or remove the dependency array. You can also do a functional update 'setCourses(c => ...)' if you only need 'courses' in the 'setCourses' call.",["205"],["206"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also do a functional update 'setData(d => ...)' if you only need 'data' in the 'setData' call.",["207"],["208"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'auth.token', 'navigate', 'type', and 'user'. Either include them or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["209"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"212","fix":"214"},{"desc":"215","fix":"216"},{"desc":"212","fix":"217"},{"desc":"218","fix":"219"},{"desc":"212","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [courses, courses.reload]",{"range":"223","text":"224"},"Update the dependencies array to be: [auth.email, auth.token, courses, courses.reload]",{"range":"225","text":"226"},{"range":"227","text":"226"},"Update the dependencies array to be: [auth.token, code, courses, courses.reload]",{"range":"228","text":"229"},{"range":"230","text":"226"},"Update the dependencies array to be: [type, auth.token, data.reload, data]",{"range":"231","text":"232"},{"range":"233","text":"226"},"Update the dependencies array to be: [auth.token, id, navigate, type, user]",{"range":"234","text":"235"},[1134,1150],"[courses, courses.reload]",[939,955],"[auth.email, auth.token, courses, courses.reload]",[918,934],[1041,1057],"[auth.token, code, courses, courses.reload]",[967,983],[1274,1304],"[type, auth.token, data.reload, data]",[1017,1033],[3043,3047],"[auth.token, id, navigate, type, user]"]